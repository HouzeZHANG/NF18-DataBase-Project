Classes :
Adherent(#login: varchar, mdp:varchar, nom: varchar, prenom: varchar, date_naissance: date, code_postal: varchar, adresse_rue: varchar, ville: varchar, adresse_mail: varchar,num_tel: varchar, actif: bool, droit_emprunt: bool)
→ avec mdp, nom, prenom, adresse_mail et num_tel NOT NULL

MembrePersonnel(#login:varchar, mdp:varchar, nom: varchar, prenom: varchar, code_postal: varchar, adresse_rue: varchar, ville: varchar, adresse_mail: varchar)
→ avec mdp, nom, prenom, adresse_mail NOT NULL

Exemplaire(#id: int, etat : {neuf, bon, abîmé, perdu}, disponible :  bool, code_oeuvre⇒OeuvreMusicale, code_film⇒Film, code_livre⇒Livre)
→ clé artificielle id implémentée car chaque exemplaire est unique et on va utiliser cette clé pour la classe emprunt
→ code_oeuvre OR code_film OR code_livre (dû à la transformation d’héritage par classes filles)

Contributeur(#nom: varchar, #prenom: varchar, date_naissance: date, nationalite: varchar)
→ avec nom, prenom clé

Classes issues des asso :
Emprunt(#id : int, exemplaire⇒Exemplaire, date_pret: date, date_retour : date, date_rendu: date, personnel⇒ MembrePersonnel, retard⇒Retard, deterioration⇒Deterioration)
→ date_pret, date_retour NOT NULL
→ id clé artificielle
→ date_rendu et date_retour>date_pret
→ deterioration OR retard
Emprunter(#adherent⇒Adherent, #emprunt⇒Emprunt)


Transformations d’héritage :
Ressourse - transformation par classes filles 
OeuvreMusicale(#code: varchar, titre: varchar, date_apparition: date, editeur: varchar, genre : varchar, code_classification : varchar, longueur : time)
→ titre, genre, code_classification NOT NULL
Film(#code: varchar, titre: varchar, date_apparition: date, editeur: varchar, genre : varchar, code_classification : varchar, longueur : time, synopsis : varchar)
→ titre, genre, code_classification NOT NULL
Livre(#code: varchar, titre: varchar, date_apparition: date, editeur: varchar, genre : varchar, code_classification : varchar, ISBN : varchar, resume : varchar, langue : varchar)
→ titre, genre, code_classification NOT NULL
→ ISBN unique NOT NULL

Composer(#contrib⇒Contributeur, #code⇒OeuvreMusicale)
Interpréter(#contrib⇒Contributeur, #code⇒OeuvreMusicale.code)
Réaliser(#contrib⇒Contributeur, #code⇒Film.code)
Acteur(#contrib⇒Contributeur, #code⇒Film.code)
Auteur(#contrib⇒Contributeur, #code⇒Livre.code)



Sanction - transformation par classes filles 
Retard(#id : int, personnel⇒MembrePersonnel, fin : bool)
→ fin : méthode
Deterioration(#id : int, remboursement : bool, personnel⇒MembrePersonnel)
